{"version":3,"sources":["data/appData.js","components/DonutChartContainer.js","components/BarChartContainer.js","components/GridContainer.js","components/PanelBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["donutChartData","barChartQ4Months","barChartMonthlyPercentages","name","data","gridData","Date","panelBarData","firstName","lastName","position","title","labelTemplate","e","category","percentage","DonutChartContainer","style","height","type","categoryField","field","padding","color","background","content","visible","BarChartContainer","categories","startAngle","map","item","idx","key","gap","skip","SparkLineChartCell","props","dataItem","PriceHistory","GridContainer","forEach","Array","from","length","Math","floor","random","width","cell","className","disabled","defaultChecked","PanelBarContainer","expanded","teammates","id","src","imageName","alt","salesReports","App","handlePDFExport","savePDF","ReactDOM","findDOMNode","appContainer","paperSize","handleShare","setState","showDialog","state","console","log","React","createRef","ref","el","primary","onClick","this","onClose","placeholder","Component","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7169a755.chunk.js","sourcesContent":["export const donutChartData = [\n    { 'foodType': 'Beverages', 'percentSold': 16.5 },\n    { 'foodType': 'Condiments', 'percentSold': 24 },\n    { 'foodType': 'Produce', 'percentSold': 13 },\n    { 'foodType': 'Meat/Poultry', 'percentSold': 16.5 },\n    { 'foodType': 'Seafood', 'percentSold': 20 },\n    { 'foodType': 'Other', 'percentSold': 10 }\n  ];\nexport const barChartQ4Months =['October', 'November', 'December'];\nexport const barChartMonthlyPercentages = [\n  { name: 'Beverages', data: [14, 16, 19.5] },\n  { name: 'Condiments', data: [24, 23.5, 24.5] },\n  { name: 'Produce', data: [12.5, 12.5, 14] },\n  { name: 'Meat/Poultry', data: [16, 18, 17] },\n  { name: 'Seafood', data: [21.5, 20, 17] },\n  { name: 'Other', data: [7, 12, 11] },\n];\nexport const gridData = [\n    {\n        \"ProductID\": 1,\n        \"ProductName\": \"Chai\",\n        \"SupplierID\": 1,\n        \"CategoryID\": 1,\n        \"QuantityPerUnit\": \"10 boxes x 20 bags\",\n        \"UnitPrice\": 18,\n        \"UnitsInStock\": 39,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 10,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 1,\n            \"CategoryName\": \"Beverages\",\n            \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 8, 20)\n    },\n    {\n        \"ProductID\": 2,\n        \"ProductName\": \"Chang\",\n        \"SupplierID\": 1,\n        \"CategoryID\": 1,\n        \"QuantityPerUnit\": \"24 - 12 oz bottles\",\n        \"UnitPrice\": 19,\n        \"UnitsInStock\": 17,\n        \"UnitsOnOrder\": 40,\n        \"ReorderLevel\": 25,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 1,\n            \"CategoryName\": \"Beverages\",\n            \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 7, 12)\n    },\n    {\n        \"ProductID\": 3,\n        \"ProductName\": \"Aniseed Syrup\",\n        \"SupplierID\": 1,\n        \"CategoryID\": 2,\n        \"QuantityPerUnit\": \"12 - 550 ml bottles\",\n        \"UnitPrice\": 10,\n        \"UnitsInStock\": 13,\n        \"UnitsOnOrder\": 70,\n        \"ReorderLevel\": 25,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 2,\n            \"CategoryName\": \"Condiments\",\n            \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 8, 26)\n    },\n    {\n        \"ProductID\": 4,\n        \"ProductName\": \"Chef Anton's Cajun Seasoning\",\n        \"SupplierID\": 2,\n        \"CategoryID\": 2,\n        \"QuantityPerUnit\": \"48 - 6 oz jars\",\n        \"UnitPrice\": 22,\n        \"UnitsInStock\": 53,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 0,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 2,\n            \"CategoryName\": \"Condiments\",\n            \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 9, 19)\n    },\n    {\n        \"ProductID\": 5,\n        \"ProductName\": \"Chef Anton's Gumbo Mix\",\n        \"SupplierID\": 2,\n        \"CategoryID\": 2,\n        \"QuantityPerUnit\": \"36 boxes\",\n        \"UnitPrice\": 21.35,\n        \"UnitsInStock\": 0,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 0,\n        \"Discontinued\": true,\n        \"Category\": {\n            \"CategoryID\": 2,\n            \"CategoryName\": \"Condiments\",\n            \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 7, 17)\n    },\n    {\n        \"ProductID\": 6,\n        \"ProductName\": \"Grandma's Boysenberry Spread\",\n        \"SupplierID\": 3,\n        \"CategoryID\": 2,\n        \"QuantityPerUnit\": \"12 - 8 oz jars\",\n        \"UnitPrice\": 25,\n        \"UnitsInStock\": 120,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 25,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 2,\n            \"CategoryName\": \"Condiments\",\n            \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 9, 19)\n    },\n    {\n        \"ProductID\": 7,\n        \"ProductName\": \"Uncle Bob's Organic Dried Pears\",\n        \"SupplierID\": 3,\n        \"CategoryID\": 7,\n        \"QuantityPerUnit\": \"12 - 1 lb pkgs.\",\n        \"UnitPrice\": 30,\n        \"UnitsInStock\": 15,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 10,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 7,\n            \"CategoryName\": \"Produce\",\n            \"Description\": \"Dried fruit and bean curd\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 7, 22)\n    },\n    {\n        \"ProductID\": 8,\n        \"ProductName\": \"Northwoods Cranberry Sauce\",\n        \"SupplierID\": 3,\n        \"CategoryID\": 2,\n        \"QuantityPerUnit\": \"12 - 12 oz jars\",\n        \"UnitPrice\": 40,\n        \"UnitsInStock\": 6,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 0,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 2,\n            \"CategoryName\": \"Condiments\",\n            \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 11, 1)\n    },\n    {\n        \"ProductID\": 9,\n        \"ProductName\": \"Mishi Kobe Niku\",\n        \"SupplierID\": 4,\n        \"CategoryID\": 6,\n        \"QuantityPerUnit\": \"18 - 500 g pkgs.\",\n        \"UnitPrice\": 97,\n        \"UnitsInStock\": 29,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 0,\n        \"Discontinued\": true,\n        \"Category\": {\n            \"CategoryID\": 6,\n            \"CategoryName\": \"Meat/Poultry\",\n            \"Description\": \"Prepared meats\"\n        },\n        \"FirstOrderedOn\": new Date(1997, 1, 21)\n    },\n    {\n        \"ProductID\": 10,\n        \"ProductName\": \"Ikura\",\n        \"SupplierID\": 4,\n        \"CategoryID\": 8,\n        \"QuantityPerUnit\": \"12 - 200 ml jars\",\n        \"UnitPrice\": 31,\n        \"UnitsInStock\": 31,\n        \"UnitsOnOrder\": 0,\n        \"ReorderLevel\": 0,\n        \"Discontinued\": false,\n        \"Category\": {\n            \"CategoryID\": 8,\n            \"CategoryName\": \"Seafood\",\n            \"Description\": \"Seaweed and fish\"\n        },\n        \"FirstOrderedOn\": new Date(1996, 8, 5)\n    }\n  ];\n  export const panelBarData = {\n    'teammates': [\n      {\n        firstName: 'Andrew',\n        lastName: 'Fuller',\n        position: 'Team Lead'\n      }, {\n        firstName: 'Nancy',\n        lastName: 'Leaver',\n        position: 'Sales Associate'\n      }, {\n        firstName: 'Robert',\n        lastName: 'King',\n        position: 'Business System Analyst'\n      }, {\n        firstName: 'Laurence',\n        lastName: 'Lee',\n        position: 'Accounting Manager'\n      }, {\n        firstName: 'Mary',\n        lastName: 'Saveley',\n        position: 'Sales Agent'\n      }, {\n        firstName: 'Hari',\n        lastName: 'Kumar',\n        position: 'Sales Manager'\n      }\n    ],\n    'salesReports': [\n      {\n        title: 'Q1 Report',\n      }, {\n        title: 'Q2 Report',\n      }, {\n        title: 'Q3 Report',\n      }, {\n        title: 'Q4 Report',\n      }\n    ]\n  }","import React from 'react';\nimport 'react-hammerjs';\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartSeriesLabels\n} from '@progress/kendo-react-charts';\nimport { donutChartData } from '../data/appData';\nconst labelTemplate = (e) => (e.category+'\\n'+(e.percentage*100)+'%');\nexport const DonutChartContainer = () => (\n  <Chart style={{height:300}}>\n    <ChartSeries>\n      <ChartSeriesItem type=\"donut\" data={donutChartData} categoryField=\"foodType\" field=\"percentSold\" padding={0}>\n        <ChartSeriesLabels color=\"#fff\" background=\"none\" content={labelTemplate} />\n      </ChartSeriesItem>\n    </ChartSeries>\n    <ChartLegend visible={false} />\n  </Chart>\n);","import React from 'react';\nimport 'react-hammerjs';\n\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartLegend,\n  ChartValueAxis,\n  ChartValueAxisItem\n} from '@progress/kendo-react-charts';\n\nimport { barChartQ4Months, barChartMonthlyPercentages } from '../data/appData';\n\nexport const BarChartContainer = () => (\n  <Chart style={{ height: 288 }}>\n    <ChartLegend visible={false} />\n    <ChartCategoryAxis>\n      <ChartCategoryAxisItem categories={barChartQ4Months} startAngle={45} />\n    </ChartCategoryAxis>\n    <ChartSeries>\n      {\n        barChartMonthlyPercentages.map((item, idx) => (\n          <ChartSeriesItem key={idx} type=\"column\" data={item.data} name={item.name} gap={2}/>\n        ))}\n    </ChartSeries>\n    <ChartValueAxis skip={4}>\n      <ChartValueAxisItem color=\"#888\" skip={2} />\n    </ChartValueAxis>\n  </Chart>\n);","import React from 'react';\nimport { Grid, GridColumn as Column } from '@progress/kendo-react-grid';\nimport { gridData } from '../data/appData';\nimport { Sparkline } from '@progress/kendo-react-charts';\n\nconst SparkLineChartCell = (props) => <td><Sparkline data={props.dataItem.PriceHistory}/></td>\n\nconst processData = (data) => {\n    data.forEach((item) => {\n      item.PriceHistory = Array.from({ length: 20 }, () => Math.floor(Math.random() * 100));\n      return item;\n    })\n    return data;\n  }\nexport const GridContainer = () => (\n\n  <div>\n    <Grid style={{ height: '300px' }} data={processData(gridData)}>\n      <Column field=\"ProductID\" title=\"ID\" width=\"40px\" />\n      <Column field=\"ProductName\" title=\"Name\" width=\"160px\" />\n      <Column field=\"Category.CategoryName\" title=\"Category Name\" width=\"80px\" />\n      <Column field=\"UnitPrice\" title=\"Price\" width=\"80px\" />\n      <Column field=\"UnitsInStock\" title=\"Stock\" width=\"90px\" />\n      <Column field=\"PriceHistory\" width=\"130px\" cell={SparkLineChartCell} title=\"Price history\" />\n      <Column field=\"Discontinued\" width=\"130px\"\n        cell={(props) => (\n          <td>\n            <input className=\"k-checkbox\" type=\"checkbox\" disabled defaultChecked={props.dataItem[props.field]} />\n            <label className=\"k-checkbox-label\"></label>\n          </td>\n        )} />\n    </Grid>\n  </div>\n);","import React from 'react';\nimport { PanelBar, PanelBarItem } from '@progress/kendo-react-layout';\nimport { panelBarData } from '../data/appData';\n\nconst imageUrl = (imageName) => ('img/'+ imageName +'.jpg');\n\nexport const PanelBarContainer = () => (\n  <PanelBar >\n    <PanelBarItem expanded={true} title=\"My Teammates\">\n      <div>\n        {panelBarData.teammates.map((item, idx) => (\n          <div className={idx === 0 ? 'teammate k-state-selected' : 'teammate'} id={item.firstName + ' ' + item.lastName} key={idx}>\n            <img src={imageUrl(item.firstName)} alt={item.firstName + ' ' + item.lastName} />\n            <span className=\"mate-info\">\n              <h2>{item.firstName + ' ' + item.lastName}</h2>\n              <p>{item.position}</p>\n            </span>\n          </div>\n        ))}\n      </div>\n    </PanelBarItem>\n    <PanelBarItem title={'Projects'} >\n      <PanelBarItem title={'Sales Reports'} >\n        {panelBarData.salesReports.map((item, idx) => (\n          <PanelBarItem title={item.title} key={idx} />\n        ))}\n      </PanelBarItem >\n    </PanelBarItem>\n    <PanelBarItem title=\"Communication\" disabled={true} />\n  </PanelBar>\n)","import React,{ Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\nimport { Input } from '@progress/kendo-react-inputs';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { Ripple } from '@progress/kendo-react-ripple';\nimport { savePDF } from '@progress/kendo-react-pdf';\nimport '@progress/kendo-theme-material/dist/all.css';\nimport './App.css';\nimport 'bootstrap-4-grid/css/grid.min.css';\nimport { DonutChartContainer } from './components/DonutChartContainer';\nimport { BarChartContainer } from './components/BarChartContainer';\nimport { GridContainer } from './components/GridContainer';\nimport { PanelBarContainer } from './components/PanelBarContainer';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.appContainer=React.createRef();\n    this.state={\n      showDialog: false\n    }\n  }\n  handlePDFExport=()=>{\n    savePDF(ReactDOM.findDOMNode(this.appContainer),{paperSize: 'auto'});\n  }\n  handleShare=()=>{\n    this.setState({\n      showDialog: !this.state.showDialog\n    },console.log(this.setState))\n  }\n  render(){\n  return (\n    <Ripple>\n    <div className=\"bootstrap-wrapper\">\n    <div className=\"app-container container\" ref={(el)=>this.appContainer=el}>\n      <div className=\"row\">\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6\">\n          <h1>Sales | Q4 2018</h1>\n        </div>\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6 col-xl-6\">\n          <Button primary={true} onClick={this.handleShare}>Share</Button>\n          <Button onClick={this.handlePDFExport}>Export to PDF</Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3\">\n          <PanelBarContainer />\n        </div>\n        <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 col-xl-9\">\n          <div className=\"row\">\n            <div className=\"col-xs-6 col-sm-6 col-md-4 col-lg-4 col-xl-4\">\n              <DonutChartContainer />\n            </div>\n            <div className=\"col-xs-6 col-sm-6 col-md-2 col-lg-2 col-xl-2\">\n              <div className=\"percentage-container\">\n                <span className=\"percentage-number\">94</span>\n                <span className=\"percentage-sign\">%</span>\n                <p>CUSTOMER SATISFACTION</p>\n              </div>\n              <div className=\"percentage-container\">\n                <span className=\"percentage-number\">89</span>\n                <span className=\"percentage-sign\">%</span>\n                <p>TARGET SALES</p>\n              </div>\n            </div>\n            <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\">\n              <BarChartContainer />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\n              <GridContainer />\n            </div>\n          </div>\n        </div>\n      </div>\n      {this.state.showDialog &&\n        <Dialog title={\"Share this report\"} onClose={this.handleShare}>\n          <p>Please enter the email address/es of the recipient/s.</p>\n          <Input placeholder=\"example@progress.com\" />\n          <DialogActionsBar>\n            <Button primary={true} onClick={this.handleShare}>Share</Button>\n            <Button onClick={this.handleShare}>Cancel</Button>\n          </DialogActionsBar>\n        </Dialog>\n      }\n    </div>\n  </div>\n  </Ripple>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}